# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import game_pb2 as game__pb2


class gameStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SendPosition = channel.unary_stream(
                '/game.game/SendPosition',
                request_serializer=game__pb2.PlayerPosition.SerializeToString,
                response_deserializer=game__pb2.PlayerPosition.FromString,
                )
        self.GetSprites = channel.unary_stream(
                '/game.game/GetSprites',
                request_serializer=game__pb2.Empty.SerializeToString,
                response_deserializer=game__pb2.Sprite.FromString,
                )
        self.GetNpcs = channel.unary_stream(
                '/game.game/GetNpcs',
                request_serializer=game__pb2.Empty.SerializeToString,
                response_deserializer=game__pb2.NPC.FromString,
                )
        self.ShootNpc = channel.unary_unary(
                '/game.game/ShootNpc',
                request_serializer=game__pb2.NpcShot.SerializeToString,
                response_deserializer=game__pb2.Empty.FromString,
                )
        self.CheckNewGame = channel.unary_unary(
                '/game.game/CheckNewGame',
                request_serializer=game__pb2.Empty.SerializeToString,
                response_deserializer=game__pb2.NewGame.FromString,
                )
        self.ToggleSprite = channel.unary_unary(
                '/game.game/ToggleSprite',
                request_serializer=game__pb2.SpriteToggled.SerializeToString,
                response_deserializer=game__pb2.Empty.FromString,
                )
        self.GetMap = channel.unary_unary(
                '/game.game/GetMap',
                request_serializer=game__pb2.Empty.SerializeToString,
                response_deserializer=game__pb2.Map.FromString,
                )


class gameServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SendPosition(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSprites(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNpcs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ShootNpc(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckNewGame(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ToggleSprite(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMap(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_gameServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SendPosition': grpc.unary_stream_rpc_method_handler(
                    servicer.SendPosition,
                    request_deserializer=game__pb2.PlayerPosition.FromString,
                    response_serializer=game__pb2.PlayerPosition.SerializeToString,
            ),
            'GetSprites': grpc.unary_stream_rpc_method_handler(
                    servicer.GetSprites,
                    request_deserializer=game__pb2.Empty.FromString,
                    response_serializer=game__pb2.Sprite.SerializeToString,
            ),
            'GetNpcs': grpc.unary_stream_rpc_method_handler(
                    servicer.GetNpcs,
                    request_deserializer=game__pb2.Empty.FromString,
                    response_serializer=game__pb2.NPC.SerializeToString,
            ),
            'ShootNpc': grpc.unary_unary_rpc_method_handler(
                    servicer.ShootNpc,
                    request_deserializer=game__pb2.NpcShot.FromString,
                    response_serializer=game__pb2.Empty.SerializeToString,
            ),
            'CheckNewGame': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckNewGame,
                    request_deserializer=game__pb2.Empty.FromString,
                    response_serializer=game__pb2.NewGame.SerializeToString,
            ),
            'ToggleSprite': grpc.unary_unary_rpc_method_handler(
                    servicer.ToggleSprite,
                    request_deserializer=game__pb2.SpriteToggled.FromString,
                    response_serializer=game__pb2.Empty.SerializeToString,
            ),
            'GetMap': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMap,
                    request_deserializer=game__pb2.Empty.FromString,
                    response_serializer=game__pb2.Map.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'game.game', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class game(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SendPosition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/game.game/SendPosition',
            game__pb2.PlayerPosition.SerializeToString,
            game__pb2.PlayerPosition.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSprites(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/game.game/GetSprites',
            game__pb2.Empty.SerializeToString,
            game__pb2.Sprite.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNpcs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/game.game/GetNpcs',
            game__pb2.Empty.SerializeToString,
            game__pb2.NPC.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ShootNpc(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/game.game/ShootNpc',
            game__pb2.NpcShot.SerializeToString,
            game__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckNewGame(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/game.game/CheckNewGame',
            game__pb2.Empty.SerializeToString,
            game__pb2.NewGame.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ToggleSprite(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/game.game/ToggleSprite',
            game__pb2.SpriteToggled.SerializeToString,
            game__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMap(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/game.game/GetMap',
            game__pb2.Empty.SerializeToString,
            game__pb2.Map.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
